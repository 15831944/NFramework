<?xml version="1.0"?>
<configuration>
    <configSections>
        <section name="castle" type="Castle.Windsor.Configuration.AppDomain.CastleSectionHandler, Castle.Windsor"/>
        <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog"/>
        <!-- indexusNetSharedCache : http://www.sharedcache.com -->
        <section name="indexusNetSharedCache" type="SharedCache.WinServiceCommon.Configuration.Client.IndexusProviderSection, SharedCache.WinServiceCommon"/>
        <!-- Membase -->
        <section name="membase" type="Membase.Configuration.MembaseClientSection, Membase"/>
        <!-- Memcached -->
        <sectionGroup name="enyim.com">
            <section name="memcached" type="Enyim.Caching.Configuration.MemcachedClientSection, Enyim.Caching"/>
        </sectionGroup>
    </configSections>
    <appSettings>
        <add key="customError.Mail.From" value="sender@realweb21.com"/>
        <add key="customError.Mail.To" value="admin@realweb21.com"/>
        <add key="Application.Copyright" value="Copyright &amp;copy; RealWeb corp. All rights reserved."/>
        <!-- HttpMultiFileHandler에서 여러 파일을 다운로드 할 수 있도록 묶음 처리했음.-->
        <add key="Set.Css" value="~/App_Themes/Default/Css1.css|~/App_Themes/Default/Css2.css"/>
        <add key="Set.Javascript" value="~/Scripts/Js1.js|~/Scripts/JS2.js|http://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.min.js"/>
        <!-- ServerPageStatePersister 에서 사용하는 환경 설정 값-->
        <!-- CompressThreshold는 최소 압축 데이타 크기 (기본 4096byte). CacheExpire는 캐시 유효기간 (기본: 60분)-->
        <add key="PageStatePersister.CompressThreshold" value="4096"/>
        <add key="PageStatePersister.CacheExpire" value="60"/>
    </appSettings>
    <connectionStrings>
        <add name="Northwind" connectionString="Data Source=(local);Initial Catalog=Northwind;Integrated Security=True;Asynchronous Processing=true;" providerName="System.Data.SqlClient"/>
    </connectionStrings>
    <castle>
        <include uri="file://NFramework.PageStatePersister.config"/>
        <include uri="file://NFramework.Compressor.config"/>
    </castle>
    <!-- SharedCache -->
    <indexusNetSharedCache defaultProvider="IndexusSharedCacheProvider">
        <clientSetting SharedCacheVersionNumber="3.0.5.1" LoggingEnable="0" CompressionEnabled="1" CompressionMinSize="1024000" HashingAlgorithm="Hashing" SocketPoolMinAvailableSize="5" SocketPoolValidationInterval="00:02:00" SocketPoolTimeout="00:02:00"/>
        <!--
      Hashing (default - is useless if your environment is using different versions of CLR's)
      Ketama
      FvnHash32
      FvnHash64
    -->
        <!-- Distributed Cacheing : 여러 서버가 정보를 분산 저장한다. -->
        <servers>
            <add key="localhost" ipaddress="127.0.0.1" port="48888"/>
            <!--<add key="debop-64" ipaddress="121.134.189.71" port="48888" />-->
        </servers>
        <!-- Replication mode : 여러 서버가 같은 정보를 캐시한다. -->
        <replicatedServers>
            <!-- Replication mode 일때만 정의해야 합니다.-->
            <!--<add key="debop-64" ipaddress="121.134.189.71" port="48888"/>-->
        </replicatedServers>
        <providers>
            <add name="IndexusSharedCacheProvider" type="SharedCache.WinServiceCommon.Provider.Cache.IndexusSharedCacheProvider, SharedCache.WinServiceCommon"/>
        </providers>
    </indexusNetSharedCache>
    <!-- Membase -->
    <!-- 
    Please read the documentation first:
      http://github.com/enyim/EnyimMemcached/wiki/MembaseClient-configuration
      
    Use this section as a template if you're connecting to Membase Servers.
    Note: you must have the top-level membase section if you're using the parameterless constructor of MembaseClient.
  -->
    <membase>
        <servers bucket="default">
            <add uri="http://localhost:8091/pools/default"/>
        </servers>
        <socketPool minPoolSize="10" maxPoolSize="100" connectionTimeout="00:00:02" deadTimeout="00:00:10"/>
        <!--<locator type="Enyim.Caching.Memcached.DefaultNodeLocator, Enyim.Caching" />-->
    </membase>
    <!-- Memcached -->
    <!-- 참고: https://github.com/enyim/EnyimMemcached/wiki/MemcachedClient-Configuration -->
    <enyim.com>
        <memcached protocol="Binary">
            <servers>
                <add address="127.0.0.1" port="11211"/>
            </servers>
            <socketPool minPoolSize="10" maxPoolSize="100" connectionTimeout="00:00:10" deadTimeout="00:02:00"/>
        </memcached>
    </enyim.com>
    <nlog>
        <include file="logging.nlog.xml"/>
    </nlog>
    <system.net>
        <connectionManagement>
            <add address="*" maxconnection="5000"/>
        </connectionManagement>
    </system.net>
    <!--
    For a description of web.config changes for .NET 4.5 see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime requestValidationMode="4.5" targetFramework="4.5" encoderType="System.Web.Security.AntiXss.AntiXssEncoder, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
      </system.Web>

    The following values can be added to <appSettings>.
      <appSettings>
        <add key="ValidationSettings:UnobtrusiveValidationMode" value="WebForms" />
        <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
      </appSettings>
    -->
    <system.web>
        <compilation debug="false" targetFramework="4.5">
            <assemblies>
                <add assembly="System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
                <add assembly="System.Data.DataSetExtensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
                <add assembly="System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
                <add assembly="System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
            </assemblies>
        </compilation>
        <!-- for ASP.NET 4.0 -->
        <httpRuntime requestValidationMode="2.0"/>
        <authentication mode="Windows"/>
        <!--
      <customErrors> 섹션에서는 요청을 실행하는 동안 
      처리되지 않은 오류가 발생하는 경우 수행할 작업을 
      구성할 수 있습니다. 특히 이 섹션에서는 
      개발자가 오류 스택 추적 대신 html 오류 페이지가 표시되도록 
      구성할 수 있습니다.

    <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
      <error statusCode="403" redirect="NoAccess.htm" />
      <error statusCode="404" redirect="FileNotFound.htm" />
    </customErrors>
    -->
        <caching>
            <outputCache defaultProvider="SysCacheOutputCacheProvider">
                <providers>
                    <add name="SysCacheOutputCacheProvider" type="NSoft.NFramework.Web.Caching.SysCacheOutputCacheProvider, NSoft.NFramework.Web"/>
                    <add name="MemcachedOutputCacheProvider" type="NSoft.NFramework.Caching.Memcached.Web.MemcachedOutputCacheProvider, NSoft.NFramework.Caching.Memcached"/>
                    <add name="SharedCacheOutputCacheProvider" type="NSoft.NFramework.Caching.SharedCache.Web.SharedCacheOutputCacheProvider, NSoft.NFramework.Caching.SharedCache"/>
                </providers>
            </outputCache>
        </caching>
        <globalization requestEncoding="utf-8" responseEncoding="utf-8" fileEncoding="euc-kr"/>
        <pages validateRequest="false" controlRenderingCompatibilityVersion="4.0">
            <controls>
                <add tagPrefix="asp" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
                <add tagPrefix="asp" namespace="System.Web.UI.WebControls" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
            </controls>
        </pages>
        <httpHandlers>
            <remove verb="*" path="*.asmx"/>
            <add verb="*" path="*.asmx" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
            <add verb="*" path="*_AppService.axd" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
            <add verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" validate="false"/>
            <!-- js 파일, css 파일에 대해서 StaticFileHandler를 사용하여, 압축, 캐시를 이용하여 성능을 향상시킵니다. -->
            <add path="*.js" verb="*" type="NSoft.NFramework.Web.HttpHandlers.StaticFileHttpHandler, NSoft.NFramework.Web" validate="false"/>
            <add path="*.css" verb="*" type="NSoft.NFramework.Web.HttpHandlers.StaticFileHttpHandler, NSoft.NFramework.Web" validate="false"/>
            <add path="*.png" verb="*" type="NSoft.NFramework.Web.HttpHandlers.StaticFileHttpHandler, NSoft.NFramework.Web" validate="false"/>
            <add path="*.jpg" verb="*" type="NSoft.NFramework.Web.HttpHandlers.StaticFileHttpHandler, NSoft.NFramework.Web" validate="false"/>
            <add path="*.gif" verb="*" type="NSoft.NFramework.Web.HttpHandlers.StaticFileHttpHandler, NSoft.NFramework.Web" validate="false"/>
            <add path="*.ico" verb="*" type="NSoft.NFramework.Web.HttpHandlers.StaticFileHttpHandler, NSoft.NFramework.Web" validate="false"/>
            <add path="StaticFileHttpHandler.axd" verb="*" type="NSoft.NFramework.Web.HttpHandlers.StaticFileHttpHandler, NSoft.NFramework.Web" validate="false"/>
            <!-- 여러 파일을 동시에 다운로드 받을 수 있도록 하는 Handler 입니다.-->
            <add verb="*" path="MultiFileHttpHandler.axd" type="NSoft.NFramework.Web.HttpHandlers.MultiFileHttpHandler, NSoft.NFramework.Web" validate="false"/>
        </httpHandlers>
        <httpModules>
            <add name="ScriptModule" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
            <!-- Page 처리 성능 측정을 위한 모듈 -->
            <add name="PagePerformanceModule" type="NSoft.NFramework.Web.HttpModules.PagePerformanceModule, NSoft.NFramework.Web"/>
            <add name="PageAccessLogModule" type="NSoft.NFramework.Web.HttpModules.PageAccessLogModule, NSoft.NFramework.Web"/>
            <!-- AsyncAccessLogModule 이 다른 IHttpAsyncHandler와 충돌이 난다. -->
            <add name="AsyncAccessLogModule" type="NSoft.NFramework.Web.HttpModules.AsyncAccessLogModule, NSoft.NFramework.Web"/>
        </httpModules>
        <!-- 세션 정보를 메모리가 아닌 사용자 정의 Provider에 저장합니다. -->
        <sessionState cookieless="true" regenerateExpiredSessionId="true" mode="Custom" customProvider="SharedCacheSessionStateStoreProvider" timeout="30">
            <providers>
                <add name="MemcachedSessionStateStoreProvider" type="NSoft.NFramework.Caching.Memcached.Web.MemcachedSessionStateStoreProvider, NSoft.NFramework.Caching.Memcached"/>
                <add name="SharedCacheSessionStateStoreProvider" type="NSoft.NFramework.Caching.SharedCache.Web.SharedCacheSessionStateStoreProvider, NSoft.NFramework.Caching.SharedCache"/>
            </providers>
        </sessionState>
    </system.web>
    <!-- 
    IIS(Internet Information Services) 7.0에서 ASP.NET AJAX를 실행하려면
    system.webServer 섹션이 필요합니다. 이전 버전의 IIS에서는 필요하지 않습니다.
  -->
    <system.webServer>
        <!-- Static Content에 대한 일괄 Client 캐시 설정-->
        <staticContent>
            <clientCache cacheControlMode="UseExpires" httpExpires="Sun, 01 Dec 2019 00:00:00 GMT" cacheControlCustom=""/>
        </staticContent>
        <validation validateIntegratedModeConfiguration="false"/>
        <handlers>
            <remove name="NSoft.NFramework_StaticFileHttpHandler_js"/>
            <remove name="NSoft.NFramework_StaticFileHttpHandler_css"/>
            <remove name="NSoft.NFramework_StaticFileHttpHandler_png"/>
            <remove name="NSoft.NFramework_StaticFileHttpHandler_jpg"/>
            <remove name="NSoft.NFramework_StaticFileHttpHandler_gif"/>
            <remove name="NSoft.NFramework_StaticFileHttpHandler_ico"/>
            <remove name="NSoft.NFramework_StaticFileHttpHandler_axd"/>
            <!-- js 파일, css 파일에 대해서 StaticFileHandler를 사용하여, 압축, 캐시를 이용하여 성능을 향상시킵니다. -->
            <add name="NSoft.NFramework_StaticFileHttpHandler_js" path="*.js" verb="*" type="NSoft.NFramework.Web.HttpHandlers.StaticFileHttpHandler, NSoft.NFramework"/>
            <add name="NSoft.NFramework_StaticFileHttpHandler_css" path="*.css" verb="*" type="NSoft.NFramework.Web.HttpHandlers.StaticFileHttpHandler, NSoft.NFramework"/>
            <add name="NSoft.NFramework_StaticFileHttpHandler_png" path="*.png" verb="*" type="NSoft.NFramework.Web.HttpHandlers.StaticFileHttpHandler, NSoft.NFramework"/>
            <add name="NSoft.NFramework_StaticFileHttpHandler_jpg" path="*.jpg" verb="*" type="NSoft.NFramework.Web.HttpHandlers.StaticFileHttpHandler, NSoft.NFramework"/>
            <add name="NSoft.NFramework_StaticFileHttpHandler_gif" path="*.gif" verb="*" type="NSoft.NFramework.Web.HttpHandlers.StaticFileHttpHandler, NSoft.NFramework"/>
            <add name="NSoft.NFramework_StaticFileHttpHandler_ico" path="*.ico" verb="*" type="NSoft.NFramework.Web.HttpHandlers.StaticFileHttpHandler, NSoft.NFramework"/>
            <add name="NSoft.NFramework_StaticFileHttpHandler_axd" path="StaticFileHttpHandler.axd" verb="*" type="NSoft.NFramework.Web.HttpHandlers.StaticFileHttpHandler, NSoft.NFramework"/>
            <!-- 여러 파일을 동시에 다운로드 받을 수 있도록 하는 Handler 입니다.-->
            <remove name="NSoft.NFramework_MultiFileHttpHandler_axd"/>
            <add name="NSoft.NFramework_MultiFileHttpHandler_axd" verb="*" path="MultiFileHttpHandler.axd" type="NSoft.NFramework.Web.HttpHandlers.MultiFileHttpHandler, NSoft.NFramework"/>
        </handlers>
        <modules>
            <remove name="ScriptModule"/>
            <add name="ScriptModule" preCondition="managedHandler" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
            <!-- Page 처리 성능 측정을 위한 모듈 for IIS 7.0 -->
            <!--
      <add name="PagePerformanceModule" type="NSoft.NFramework.Web.HttpModules.PagePerformanceModule, NSoft.NFramework.Web" />
      <add name="PageAccessLogModule" type="NSoft.NFramework.Web.HttpModules.PageAccessLogModule, NSoft.NFramework.Web" />
      -->
            <!-- AsyncAccessLogModule 이 다른 IHttpAsyncHandler와 충돌이 난다. -->
            <!--<add name="AsyncAccessLogModule" type="NSoft.NFramework.Web.HttpModules.AsyncAccessLogModule, NSoft.NFramework.Web" />-->
        </modules>
        <defaultDocument>
            <files>
                <clear/>
                <add value="default.aspx"/>
                <add value="index.htm"/>
                <add value="Default.htm"/>
                <add value="Default.asp"/>
                <add value="index.html"/>
                <add value="iisstart.htm"/>
            </files>
        </defaultDocument>
    </system.webServer>
    <runtime>
        <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
            <!-- Castle Version 변경에 따라 -->
            <dependentAssembly>
                <assemblyIdentity name="Castle.Core" publicKeyToken="407dd0808d44fbdc"/>
                <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0"/>
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="Castle.Windsor" publicKeyToken="407dd0808d44fbdc"/>
                <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0"/>
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="NHiberante" publicKeyToken="aa95f207798dfdb4"/>
                <bindingRedirect oldVersion="0.0.0.0-3.2.1.4000" newVersion="3.2.1.4000"/>
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="NLog" publicKeyToken="5120e14c03d0593c"/>
                <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0"/>
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="WindowsBase" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
                <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0"/>
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="NHibernate" publicKeyToken="aa95f207798dfdb4" culture="neutral"/>
                <bindingRedirect oldVersion="0.0.0.0-3.2.1.4000" newVersion="3.2.1.4000"/>
            </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding appliesTo="v2.0.50727" xmlns="urn:schemas-microsoft-com:asm.v1">
            <dependentAssembly>
                <assemblyIdentity name="System.Web.Extensions" publicKeyToken="31bf3856ad364e35"/>
                <bindingRedirect oldVersion="1.0.0.0-3.5.0.0" newVersion="3.5.0.0"/>
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="System.Web.Extensions.Design" publicKeyToken="31bf3856ad364e35"/>
                <bindingRedirect oldVersion="1.0.0.0-3.5.0.0" newVersion="3.5.0.0"/>
            </dependentAssembly>
        </assemblyBinding>
    </runtime>
</configuration>