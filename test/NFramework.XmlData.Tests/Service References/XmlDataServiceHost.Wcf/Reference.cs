//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NSoft.NFramework.XmlData.XmlDataServiceHost.Wcf {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://svc.realweb21.com", ConfigurationName="XmlDataServiceHost.Wcf.XmlDataService")]
    public interface XmlDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://svc.realweb21.com/XmlDataService/Ping", ReplyAction="http://svc.realweb21.com/XmlDataService/PingResponse")]
        string Ping();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://svc.realweb21.com/XmlDataService/Ping", ReplyAction="http://svc.realweb21.com/XmlDataService/PingResponse")]
        System.IAsyncResult BeginPing(System.AsyncCallback callback, object asyncState);
        
        string EndPing(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://svc.realweb21.com/XmlDataService/Execute", ReplyAction="http://svc.realweb21.com/XmlDataService/ExecuteResponse")]
        byte[] Execute(byte[] requestBytes, string productName, bool compress);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://svc.realweb21.com/XmlDataService/Execute", ReplyAction="http://svc.realweb21.com/XmlDataService/ExecuteResponse")]
        System.IAsyncResult BeginExecute(byte[] requestBytes, string productName, bool compress, System.AsyncCallback callback, object asyncState);
        
        byte[] EndExecute(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://svc.realweb21.com/XmlDataService/ExecuteSecurity", ReplyAction="http://svc.realweb21.com/XmlDataService/ExecuteSecurityResponse")]
        byte[] ExecuteSecurity(byte[] requestBytes, string productName, bool compress);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://svc.realweb21.com/XmlDataService/ExecuteSecurity", ReplyAction="http://svc.realweb21.com/XmlDataService/ExecuteSecurityResponse")]
        System.IAsyncResult BeginExecuteSecurity(byte[] requestBytes, string productName, bool compress, System.AsyncCallback callback, object asyncState);
        
        byte[] EndExecuteSecurity(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface XmlDataServiceChannel : NSoft.NFramework.XmlData.XmlDataServiceHost.Wcf.XmlDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExecuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExecuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExecuteSecurityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExecuteSecurityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class XmlDataServiceClient : System.ServiceModel.ClientBase<NSoft.NFramework.XmlData.XmlDataServiceHost.Wcf.XmlDataService>, NSoft.NFramework.XmlData.XmlDataServiceHost.Wcf.XmlDataService {
        
        private BeginOperationDelegate onBeginPingDelegate;
        
        private EndOperationDelegate onEndPingDelegate;
        
        private System.Threading.SendOrPostCallback onPingCompletedDelegate;
        
        private BeginOperationDelegate onBeginExecuteDelegate;
        
        private EndOperationDelegate onEndExecuteDelegate;
        
        private System.Threading.SendOrPostCallback onExecuteCompletedDelegate;
        
        private BeginOperationDelegate onBeginExecuteSecurityDelegate;
        
        private EndOperationDelegate onEndExecuteSecurityDelegate;
        
        private System.Threading.SendOrPostCallback onExecuteSecurityCompletedDelegate;
        
        public XmlDataServiceClient() {
        }
        
        public XmlDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public XmlDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XmlDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XmlDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<PingCompletedEventArgs> PingCompleted;
        
        public event System.EventHandler<ExecuteCompletedEventArgs> ExecuteCompleted;
        
        public event System.EventHandler<ExecuteSecurityCompletedEventArgs> ExecuteSecurityCompleted;
        
        public string Ping() {
            return base.Channel.Ping();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPing(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPing(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndPing(System.IAsyncResult result) {
            return base.Channel.EndPing(result);
        }
        
        private System.IAsyncResult OnBeginPing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginPing(callback, asyncState);
        }
        
        private object[] OnEndPing(System.IAsyncResult result) {
            string retVal = this.EndPing(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPingCompleted(object state) {
            if ((this.PingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PingCompleted(this, new PingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PingAsync() {
            this.PingAsync(null);
        }
        
        public void PingAsync(object userState) {
            if ((this.onBeginPingDelegate == null)) {
                this.onBeginPingDelegate = new BeginOperationDelegate(this.OnBeginPing);
            }
            if ((this.onEndPingDelegate == null)) {
                this.onEndPingDelegate = new EndOperationDelegate(this.OnEndPing);
            }
            if ((this.onPingCompletedDelegate == null)) {
                this.onPingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPingCompleted);
            }
            base.InvokeAsync(this.onBeginPingDelegate, null, this.onEndPingDelegate, this.onPingCompletedDelegate, userState);
        }
        
        public byte[] Execute(byte[] requestBytes, string productName, bool compress) {
            return base.Channel.Execute(requestBytes, productName, compress);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginExecute(byte[] requestBytes, string productName, bool compress, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExecute(requestBytes, productName, compress, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndExecute(System.IAsyncResult result) {
            return base.Channel.EndExecute(result);
        }
        
        private System.IAsyncResult OnBeginExecute(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] requestBytes = ((byte[])(inValues[0]));
            string productName = ((string)(inValues[1]));
            bool compress = ((bool)(inValues[2]));
            return this.BeginExecute(requestBytes, productName, compress, callback, asyncState);
        }
        
        private object[] OnEndExecute(System.IAsyncResult result) {
            byte[] retVal = this.EndExecute(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExecuteCompleted(object state) {
            if ((this.ExecuteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExecuteCompleted(this, new ExecuteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExecuteAsync(byte[] requestBytes, string productName, bool compress) {
            this.ExecuteAsync(requestBytes, productName, compress, null);
        }
        
        public void ExecuteAsync(byte[] requestBytes, string productName, bool compress, object userState) {
            if ((this.onBeginExecuteDelegate == null)) {
                this.onBeginExecuteDelegate = new BeginOperationDelegate(this.OnBeginExecute);
            }
            if ((this.onEndExecuteDelegate == null)) {
                this.onEndExecuteDelegate = new EndOperationDelegate(this.OnEndExecute);
            }
            if ((this.onExecuteCompletedDelegate == null)) {
                this.onExecuteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteCompleted);
            }
            base.InvokeAsync(this.onBeginExecuteDelegate, new object[] {
                        requestBytes,
                        productName,
                        compress}, this.onEndExecuteDelegate, this.onExecuteCompletedDelegate, userState);
        }
        
        public byte[] ExecuteSecurity(byte[] requestBytes, string productName, bool compress) {
            return base.Channel.ExecuteSecurity(requestBytes, productName, compress);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginExecuteSecurity(byte[] requestBytes, string productName, bool compress, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExecuteSecurity(requestBytes, productName, compress, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndExecuteSecurity(System.IAsyncResult result) {
            return base.Channel.EndExecuteSecurity(result);
        }
        
        private System.IAsyncResult OnBeginExecuteSecurity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] requestBytes = ((byte[])(inValues[0]));
            string productName = ((string)(inValues[1]));
            bool compress = ((bool)(inValues[2]));
            return this.BeginExecuteSecurity(requestBytes, productName, compress, callback, asyncState);
        }
        
        private object[] OnEndExecuteSecurity(System.IAsyncResult result) {
            byte[] retVal = this.EndExecuteSecurity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExecuteSecurityCompleted(object state) {
            if ((this.ExecuteSecurityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExecuteSecurityCompleted(this, new ExecuteSecurityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExecuteSecurityAsync(byte[] requestBytes, string productName, bool compress) {
            this.ExecuteSecurityAsync(requestBytes, productName, compress, null);
        }
        
        public void ExecuteSecurityAsync(byte[] requestBytes, string productName, bool compress, object userState) {
            if ((this.onBeginExecuteSecurityDelegate == null)) {
                this.onBeginExecuteSecurityDelegate = new BeginOperationDelegate(this.OnBeginExecuteSecurity);
            }
            if ((this.onEndExecuteSecurityDelegate == null)) {
                this.onEndExecuteSecurityDelegate = new EndOperationDelegate(this.OnEndExecuteSecurity);
            }
            if ((this.onExecuteSecurityCompletedDelegate == null)) {
                this.onExecuteSecurityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteSecurityCompleted);
            }
            base.InvokeAsync(this.onBeginExecuteSecurityDelegate, new object[] {
                        requestBytes,
                        productName,
                        compress}, this.onEndExecuteSecurityDelegate, this.onExecuteSecurityCompletedDelegate, userState);
        }
    }
}
