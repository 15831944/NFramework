<?xml version="1.0" encoding="utf-8"?>

<configuration>

	<!-- Castle.Windsor Property -->
	<properties>
		<defaultDatabaseName>Northwind</defaultDatabaseName>
		<defaultSessionFactoryPath>.\NHibernateCfgFiles\</defaultSessionFactoryPath>
		<defaultSessionFactoryName>hibernate.northwind.mssql.cfg.xml</defaultSessionFactoryName>
	</properties>

	<!-- Castle.Windsor Component configuration -->
	<components>

		<!-- NHibernate 용 Generic Repository : NHRepository{TEntity} 를 생성한다. lifestyle=singleton|thread|transient-->
		<component id="NHibernate.Repository"
		           service="NSoft.NFramework.Data.NHibernateEx.INHRepository`1, NSoft.NFramework.Data.NHibernateEx"
		           type="NSoft.NFramework.Data.NHibernateEx.NHRepository`1, NSoft.NFramework.Data.NHibernateEx"
				   lifestyle="singleton">
			<!-- component에 interceptor를 등록하면, component 호출 시에 interceptor가 가로챌 수 있습니다. -->
			<interceptors>
				<interceptor>${NSoft.NFramework.PerformanceInterceptor}</interceptor>
			</interceptors>
		</component>

		<!-- NHibernate Entity의 상태를 추적할 수 있는 Interceptor : 이것이 없으면 Entity의 IsSaved, IsTransient가 오동작을 합니다. -->
		<component id="NHibernate.Interceptor"
		           service="NHibernate.IInterceptor, NHibernate"
               type="NSoft.NFramework.Data.NHibernateEx.Interceptors.EntityStateInterceptor, NSoft.NFramework.Data.NHibernateEx" />

		<!-- UnitOfWork 사용을 위한 Factory -->
		<component id="NHibernate.UnitOfWorkFactory"
		           service="NSoft.NFramework.Data.NHibernateEx.IUnitOfWorkFactory, NSoft.NFramework.Data.NHibernateEx"
		           type="NSoft.NFramework.Data.NHibernateEx.NHUnitOfWorkFactory, NSoft.NFramework.Data.NHibernateEx"
				   lifestyle="singleton">
			<parameters>
				<cfgFileName>hibernate.cfg.xml</cfgFileName>
				<!--<QueryProvider>${IniNHibernateQueryStringProvider.Northwind}</QueryProvider>-->
			</parameters>
		</component>


		<!-- Castle DynamicProxy를 이용해서 Performance를 검사하는 Interceptor -->
		<component id="NSoft.NFramework.PerformanceInterceptor"
		           service="Castle.DynamicProxy.IInterceptor, Castle.Core"
		           type="NSoft.NFramework.Data.NHibernateEx.PerformanceInterceptor, NSoft.NFramework.Data.NHibernateEx.Tests"
				   lifestyle="singleton" />

	</components>
</configuration>