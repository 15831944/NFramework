<?xml version="1.0" encoding="utf-8"?>

<configuration>

	<!-- Castle.Windsor Component configuration -->
	<components>
		<!-- NHibernate 용 Generic Repository : NHRepository{TEntit} 를 생성한다. lifestyle=singleton|transient-->
		<component id="NHibernate.Repository"
		           service="NSoft.NFramework.Data.NHibernateEx.INHRepository`1, NSoft.NFramework.Data.NHibernateEx"
		           type="NSoft.NFramework.Data.NHibernateEx.NHRepository`1, NSoft.NFramework.Data.NHibernateEx" />

		<!-- UnitOfWork 사용을 위한 Factory -->
		<component id="NHibernate.UnitOfWorkFactory"
		           service="NSoft.NFramework.Data.NHibernateEx.IUnitOfWorkFactory, NSoft.NFramework.Data.NHibernateEx"
		           type="NSoft.NFramework.Data.NHibernateEx.NHUnitOfWorkFactory, NSoft.NFramework.Data.NHibernateEx">
		</component>

	   	<!-- EditablePropertyChangedInterceptor 하나면 NotifyPropertyChangedInterceptor, EditableObjectInterceptor 둘 다 제공됩니다. -->
		
		<component id="NHibernate.Interceptor"
				   service="NHibernate.IInterceptor, NHibernate"
				   type="NSoft.NFramework.Data.NHibernateEx.Interceptors.EditablePropertyChangedInterceptor, NSoft.NFramework.Data.NHibernateEx"/>
		<!--
		<component id="NHibernate.Interceptor"
		   service="NHibernate.IInterceptor, NHibernate"
		   type="NSoft.NFramework.Data.NHibernateEx.NotifyPropertyChangedInterceptor, NSoft.NFramework.Data"/>
		
		<component id="NHibernate.Interceptor"
				   service="NHibernate.IInterceptor, NHibernate"
				   type="NSoft.NFramework.Data.NHibernateEx.EditableObjectInterceptor, NSoft.NFramework.Data"/>
		-->
		

	</components>

</configuration>