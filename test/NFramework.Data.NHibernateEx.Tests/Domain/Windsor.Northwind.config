<?xml version="1.0" encoding="utf-8"?>

<configuration>

	<!-- Castle.Windsor Component configuration -->
	<components>

		<!-- NHibernate 용 Generic Repository : NHRepository{TEntit} 를 생성한다. lifestyle=singleton|transient-->
		<component id="NHibernate.Repository"
				   service="NSoft.NFramework.Data.NHibernateEx.INHRepository`1, NSoft.NFramework.Data.NHibernateEx"
				   type="NSoft.NFramework.Data.NHibernateEx.NHRepository`1, NSoft.NFramework.Data.NHibernateEx" />

		<!-- UnitOfWork 사용을 위한 Factory -->
		<component id="NHibernate.UnitOfWorkFactory"
				   service="NSoft.NFramework.Data.NHibernateEx.IUnitOfWorkFactory, NSoft.NFramework.Data.NHibernateEx"
				   type="NSoft.NFramework.Data.NHibernateEx.FluentNHUnitOfWorkFactory, NSoft.NFramework.Data.NHibernateEx">
			<parameters>
                <assemblyNames>
                    <array>
                        <item>NSoft.NFramework.Data.NHibernateEx.Domain</item>
                    </array>
                </assemblyNames>
				<cfgFileName>.\Domain\hibernate.northwind.mssql.fluent.cfg.xml</cfgFileName>
				<QueryProvider>${IniNHibernateQueryStringProvider.Northwind}</QueryProvider>
			</parameters>
		</component>

		<component id="orderdetail.repository" 
				   service="NSoft.NFramework.Data.NHibernateEx.INHRepository`1[[NSoft.NFramework.Data.NHibernateEx.Domain.Northwind.OrderDetail, NSoft.NFramework.Data.NHibernateEx.Domain]], NSoft.NFramework.Data.NHibernateEx" 
				   type="NSoft.NFramework.Data.NHibernateEx.Domain.Northwind.OrderDetailRepository, NSoft.NFramework.Data.NHibernateEx.Tests">
			<parameters>
				<!-- Generic 한 Repository가 아닌 이렇게 특정적인 Repository가 등록되는지 확인하기 위해 -->
				<message>안녕하세요?</message>
			</parameters>
		</component>

		<component id="customer.repository" 
				   service="NSoft.NFramework.Data.NHibernateEx.INHRepository`1[[NSoft.NFramework.Data.NHibernateEx.Domain.Northwind.Customer, NSoft.NFramework.Data.NHibernateEx.Domain]], NSoft.NFramework.Data.NHibernateEx"
				   type="NSoft.NFramework.Data.NHibernateEx.Domain.Northwind.CustomerRepository, NSoft.NFramework.Data.NHibernateEx.Tests">
			<parameters>
				<SearchOrderDate>1998-03-10</SearchOrderDate>
			</parameters>
		</component>

		<!-- 
			NHibernate 용 Entity의 상태를 추적할 수 있는 Interceptor입니다. IUnitOfWorkFactory가 Session을 생성할 때 적용됩니다.
		-->
		<component id="nhibernate.state.interceptor" 
				   service="NHibernate.IInterceptor, NHibernate"
                   type="NSoft.NFramework.Data.NHibernateEx.Interceptors.EntityStateInterceptor, NSoft.NFramework.Data.NHibernateEx" />


		<component id="IniNHibernateQueryStringProvider.Northwind"
				   service="NSoft.NFramework.Data.IIniQueryProvider, NSoft.NFramework.Data"
				   type="NSoft.NFramework.Data.QueryProviders.IniNHibernateQueryProvider, NSoft.NFramework.Data">
			<parameters>
				<queryFilePath>.\QueryFiles\Northwind.NHibernate.MsSql.ini</queryFilePath>
			</parameters>
		</component>

		<component id="IniNHibernateQueryStringProvider.Pubs" 
				   service="NSoft.NFramework.Data.IIniQueryProvider, NSoft.NFramework.Data" 
				   type="NSoft.NFramework.Data.QueryProviders.IniNHibernateQueryProvider, NSoft.NFramework.Data">
			<parameters>
				<queryFilePath>.\QueryFiles\Pubs.NHibernate.MsSql.ini</queryFilePath>
			</parameters>
		</component>


	</components>
</configuration>