<?xml version="1.0" encoding="utf-8"?>

<configuration>

	<!-- Castle.Windsor Component configuration -->
	<components>
		<!-- NHibernate 용 Generic Repository : NHRepository{TEntit} 를 생성한다. lifestyle=singleton|transient-->
		<component id="NHibernate.Repository"
				   service="NSoft.NFramework.Data.NHibernateEx.INHRepository`1, NSoft.NFramework.Data.NHibernateEx"
				   type="NSoft.NFramework.Data.NHibernateEx.NHRepository`1, NSoft.NFramework.Data.NHibernateEx"
				   lifestyle="thread" />

		<!-- 
			NOTE: FluentNHibernate 를 사용한 UnitOfWorkFactory 입니다.
		-->
		<component id="NHibernate.UnitOfWorkFactory.Fluent"
				   service="NSoft.NFramework.Data.NHibernateEx.IUnitOfWorkFactory, NSoft.NFramework.Data.NHibernateEx"
				   type="NSoft.NFramework.Data.NHibernateEx.FluentNHUnitOfWorkFactory, NSoft.NFramework.Data.NHibernateEx">
			<parameters>
				<assemblyNames>
					<array>
						<item>NSoft.NFramework.Data.NHibernateEx.Tests</item>
						<item>NSoft.NFramework.Data.NHibernateEx.Domain</item>
					</array>
				</assemblyNames>
				<Convention>${FluentConvention.PascalNaming}</Convention>
			</parameters>
		</component>

		<component id="FluentConvention.PascalNaming"
				   service="NSoft.NFramework.Data.NHibernateEx.Fluents.IFluentConvention, NSoft.NFramework.Data.NHibernateEx"
				   type="NSoft.NFramework.Data.NHibernateEx.Fluents.PascalNamingConvention, NSoft.NFramework.Data.NHibernateEx">
			<parameters>
				<Options>${FluentNHibernate.ConventionOptions}</Options>
				<PropertyWithClassNames>
					<list>
						<item>Code</item>
						<item>Name</item>
					</list>
				</PropertyWithClassNames>
			</parameters>
		</component>

		<component id="FluentNHibernate.ConventionOptions"
				   type="NSoft.NFramework.Data.NHibernateEx.Fluents.ConventionOptions, NSoft.NFramework.Data.NHibernateEx">
			<parameters>
				<DefaultLazy>true</DefaultLazy>
				<DynamicInsert>true</DynamicInsert>
				<DynamicUpdate>true</DynamicUpdate>
				<PrimaryKeySurfix>Id</PrimaryKeySurfix>
				<ForeignKeySurfix>Id</ForeignKeySurfix>
			</parameters>
		</component>

	</components>

</configuration>