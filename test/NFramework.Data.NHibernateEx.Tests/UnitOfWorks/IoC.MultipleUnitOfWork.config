<?xml version="1.0" encoding="utf-8"?>

<configuration>

	<!-- Castle.Windsor Component configuration -->
	<components>
		<!-- NHibernate 용 Generic Repository : NHRepository{TEntit} 를 생성한다. lifestyle=singleton|transient-->
		<component id="NHibernate.Repository"
				   service="NSoft.NFramework.Data.NHibernateEx.INHRepository`1, NSoft.NFramework.Data.NHibernateEx"
				   type="NSoft.NFramework.Data.NHibernateEx.NHRepository`1, NSoft.NFramework.Data.NHibernateEx"
				   lifestyle="thread" />

		<!-- NHibernate Entity의 상태를 추적할 수 있는 Interceptor : 이것이 없으면 Entity의 IsSaved, IsTransient가 오동작을 합니다. -->
		<component id="NHibernate.Interceptor"
				   service="NHibernate.IInterceptor, NHibernate"
               type="NSoft.NFramework.Data.NHibernateEx.Interceptors.EntityStateInterceptor, NSoft.NFramework.Data.NHibernateEx" />


		<!-- 
			NOTE: 다중의 SessionFactory를 UnitOfWork 패턴으로 사용할 수 있도록 해주는 Factory 
		-->
		<component id="NHibernate.UnitOfWorkFactory"
				   service="NSoft.NFramework.Data.NHibernateEx.IUnitOfWorkFactory, NSoft.NFramework.Data.NHibernateEx"
				   type="NSoft.NFramework.Data.NHibernateEx.NHMultipleUnitOfWorkFactory, NSoft.NFramework.Data.NHibernateEx">
			<parameters>
				<!-- 
					복수개의 hibernate configuration file 경로를 지정하면, 
					하나의 UnitOfWork에서 알아서 Entity 별로 관련 SessionFactory 및 Session에서 작업하도록 해줍니다.
				-->
				<cfgFileNames>
					<array>
						<item>.\UnitOfWorks\MultipleUnitOfWorkArtifacts\Database1.cfg.xml</item>
						<item>.\UnitOfWorks\MultipleUnitOfWorkArtifacts\Database2.cfg.xml</item>
					</array>
				</cfgFileNames>
			</parameters>
		</component>

	</components>

</configuration>