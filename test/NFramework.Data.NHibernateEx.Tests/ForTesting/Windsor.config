<?xml version="1.0" encoding="utf-8"?>

<configuration>

	<!-- Castle.Windsor Component configuration -->
	<components>

		<!-- NHibernate 용 Generic Repository : NHRepository{TEntit} 를 생성한다. lifestyle=singleton|transient-->
		<component id="nhibernate.repository"
		           service="NSoft.NFramework.Data.NHibernateEx.INHRepository`1, NSoft.NFramework.Data.NHibernateEx"
		           type="NSoft.NFramework.Data.NHibernateEx.NHRepository`1, NSoft.NFramework.Data.NHibernateEx" />

		<!-- NHibernate Entity의 상태를 추적할 수 있는 Interceptor : 이것이 없으면 Entity의 IsSaved, IsTransient가 오동작을 합니다. -->
		<component id="nhibernate.interceptor"
		           service="NHibernate.IInterceptor, NHibernate"
		           type="NSoft.NFramework.Data.NHibernateEx.Interceptors.EntityStateInterceptor, NSoft.NFramework.Data.NHibernateEx" />

		<!-- UnitOfWork 사용을 위한 Factory -->
		<component id="nhibernate.unit-of-work.factory"
		           service="NSoft.NFramework.Data.NHibernateEx.IUnitOfWorkFactory, NSoft.NFramework.Data.NHibernateEx"
		           type="NSoft.NFramework.Data.NHibernateEx.FluentNHUnitOfWorkFactory, NSoft.NFramework.Data.NHibernateEx">
            <parameters>
                <assemblyNames>
                    <array>NSoft.NFramework.Data.NHibernateEx.Domain</array>
                    <array>NSoft.NFramework.Data.NHibernateEx.Tests</array>
                </assemblyNames>
                <cfgFilename>hibernate.fluent.cfg.xml</cfgFilename>
            </parameters>
		</component>
	</components>

</configuration>