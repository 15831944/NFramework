<?xml version="1.0" encoding="utf-8"?>

<hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">

	<session-factory name="StringResourcesDB">

		<property name="dialect">NHibernate.Dialect.MsSql2005Dialect</property>
		<property name="connection.provider">NHibernate.Connection.DriverConnectionProvider</property>
		<property name="connection.driver_class">NHibernate.Driver.SqlClientDriver</property>

		<property name="connection.connection_string_name">StringResourcesDB</property>
		<property name="connection.isolation">ReadCommitted</property>

		<property name="prepare_sql">true</property>
		<property name="show_sql">true</property>
		<property name="format_sql">true</property>
		
		<!-- ConnectionString에 User Instance 속성이 True이면 default_schema를 정의하면 안된다. -->
		<!--<property name="default_schema">StringResourcesDB.dbo</property>-->

		<property name="adonet.batch_size">30</property>

		<!-- For NH 2.1.0 -->
		<!--<property name="proxyfactory.factory_class">NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle</property>-->
		<!--<property name="proxyfactory.factory_class">NHibernate.ByteCode.LinFu.ProxyFactoryFactory, NHibernate.ByteCode.LinFu</property>-->
		
		
		<!-- DML-style operations : delete/insert/update/bulk copy 시에 hql을 이용할 수 있다. (예: delete Enitty)-->
		<property name="query.factory_class">
			NHibernate.Hql.Ast.ANTLR.ASTQueryTranslatorFactory, NHibernate
		</property>

		<!-- http://fabiomaulo.blogspot.com/2009/06/auto-quote-tablecolumn-names.html -->
		<!-- none으로 해야 cfg.BuildSessionFactory() 시에 Connection을 만들지 않는다. -->
		<property name="hbm2ddl.keywords">none</property>


		<!-- 캐시 관련 -->
		<!--
		<property name="cache.provider_class">NHibernate.Caches.Prevalence.PrevalenceCacheProvider, NHibernate.Caches.Prevalence</property>
		<property name="cache.provider_class">NHibernate.Caches.SysCache.SysCacheProvider, NHibernate.Caches.SysCache</property>
		<property name="cache.provider_class">NHibernate.Caches.MemCache.MemCacheProvider, NHibernate.Caches.MemCache</property>
		-->

		<!--
			MemCacheProvider 사용시 use_second_level_cache : false 일때만 작동
			SysCacheProvider 사용시 use_second_level_cache : true/false 모두 작동
		-->
		<!--
		<property name="cache.region_prefix">NSoft.NFramework.StringResources</property>
		<property name="cache.use_second_level_cache">true</property>
		<property name="cache.use_query_cache">true</property>
		<property name="cache.provider_class">NHibernate.Caches.SysCache.SysCacheProvider, NHibernate.Caches.SysCache</property>
		<property name="expiration">120</property>
		-->

		<!-- mapping files -->
		<mapping assembly="NSoft.NFramework.StringResources" />

	</session-factory>
</hibernate-configuration>