<?xml version="1.0" encoding="utf-8" ?>

<configuration>

	<components>

		<!-- Standard Service Job Manager -->
		<component id="StdServiceJobManager"
				   service="NSoft.NFramework.JobScheduler.Managers.IServiceJobManager, NSoft.NFramework.JobScheduler"
				   type="NSoft.NFramework.JobScheduler.Managers.StdServiceJobManager, NSoft.NFramework.JobScheduler">
		</component>
		
		<!-- NOTE: ServiceJob의 Name은 필수 설정 항목입니다!!! -->

		<component id="DummyServiceJob1"
				   service="NSoft.NFramework.JobScheduler.Jobs.IServiceJob, NSoft.NFramework.JobScheduler"
				   type="NSoft.NFramework.JobScheduler.Jobs.DummyServiceJob, NSoft.NFramework.JobScheduler"
				   lifestyle="Transient">
			<parameters>
				<Name>DummyServiceJob1</Name>
				<Group>DummyGroup</Group>
				<Enabled>True</Enabled>

				<MaxRetryCount>3</MaxRetryCount>
				<!-- 재실행 시도 중간의 대기 시간 (단위:millisecond)-->
				<RetryInterval>1000</RetryInterval>

				<Trigger>${CronTrigger}</Trigger>

				<!-- NOTE: ServiceJob 실행 시 필요한 상태 정보를 설정합니다. -->
				<StateMap>
					<dictionary>
						<entry key="RunCount">1</entry>
						<entry key="LastRunTime">2000-01-01T00:00:00.000</entry>
					</dictionary>
				</StateMap>
			</parameters>
		</component>

		<component id="DummyServiceJob2"
				   service="NSoft.NFramework.JobScheduler.Jobs.IServiceJob, NSoft.NFramework.JobScheduler"
				   type="NSoft.NFramework.JobScheduler.Jobs.DummyServiceJob, NSoft.NFramework.JobScheduler"
				   lifestyle="Transient">
			<parameters>
				<Name>DummyServiceJob2</Name>
				<Group>DummyGroup</Group>
				<Enabled>True</Enabled>

				<Trigger>${SimpleTrigger}</Trigger>
			</parameters>
		</component>


		<component id="SimpleTrigger"
				   service="Quartz.Trigger, Quartz"
				   type="Quartz.SimpleTrigger, Quartz"
				   lifestyle="Transient">
			<parameters>
				<Name>SimpleTrigger_For_Example</Name>
				<Group>TriggerGroup</Group>
				<RepeatCount>-1</RepeatCount>
				<RepeatInterval>00:00:01</RepeatInterval>
				<StartTimeUtc>2000-01-01T00:00:00.000</StartTimeUtc>
				<EndTimeUtc>2020-12-31T00:00:00.000</EndTimeUtc>
			</parameters>
		</component>

		<component id="CronTrigger"
				   service="Quartz.Trigger, Quartz"
				   type="Quartz.CronTrigger, Quartz"
				   lifestyle="Transient">
			<parameters>
				<Name>CronTrigger_For_Example</Name>
				<Group>TriggerGroup</Group>

				<!-- 10분 마다 -->
				<CronExpressionString>* 0/10 * * * ?</CronExpressionString>

				<!-- 실행 기간 : 지정하지 않으면 무한대 -->
				<StartTimeUtc>2000-01-01T00:00:00.000</StartTimeUtc>
				<EndTimeUtc>2020-12-31T00:00:00.000</EndTimeUtc>
			</parameters>
		</component>

		<!-- 테스트용 JobListener -->
		<component id="LoggingJobListener"
				   service="Quartz.IJobListener, Quartz"
				   type="NSoft.NFramework.JobScheduler.JobListeners.LoggingJobListener, NSoft.NFramework.JobScheduler">
			<parameters>
				<TargetJob>${DummyServiceJob1}</TargetJob>
				<!-- TargetJob 완료 후, 후속 실행할 Job-->
				<ContinueWithJob>${DummyServiceJob2}</ContinueWithJob>
			</parameters>
		</component>
		
	</components>
</configuration>
